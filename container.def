BootStrap: docker
From: ubuntu:focal

%files
    ros_requirements.rosinstall /usr/project/ros_requirements.rosinstall

%post -c /bin/bash
    apt-get update

    # Tzdata
    DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt-get install -y tzdata

    # ROS sources
    echo "deb http://packages.ros.org/ros/ubuntu focal main" > /etc/apt/sources.list.d/ros-latest.list
    apt-get install -y curl gnupg wget
    curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add -

    # Apt packages
    apt-get install -y software-properties-common
    add-apt-repository ppa:dartsim/ppa
    DISTRO=noetic
    apt-get update
    apt-get install -y \
        vim-tiny \
        git \
        cmake \
        build-essential \
        pkg-config \
        libeigen3-dev \
        libassimp-dev \
        libccd-dev \
        libfcl-dev \
        libboost-regex-dev \
        libboost-system-dev \
        libxi-dev \
        libxmu-dev \
        freeglut3-dev \
        libopenscenegraph-dev \
        libnlopt-cxx-dev \
        libtinyxml2-dev \
        liburdfdom-dev \
        libboost-filesystem-dev \
        libmicrohttpd-dev \
        libompl-dev \
        libyaml-cpp-dev \
        libopencv-dev \
        libblas-dev \
        liblapack-dev \
        libmicrohttpd-dev \
        ros-$DISTRO-control-toolbox \
        ros-$DISTRO-ompl \
        ros-$DISTRO-force-torque-sensor-controller \
        ros-$DISTRO-srdfdom \
        ros-$DISTRO-octomap-ros \
        ros-$DISTRO-joint-trajectory-controller \
        ros-$DISTRO-transmission-interface \
        ros-$DISTRO-cv-bridge \
        ros-$DISTRO-image-transport \
        ros-$DISTRO-image-geometry \
        ros-$DISTRO-diagnostic-updater \
        ros-$DISTRO-controller-manager \
        ros-$DISTRO-rviz \
        ros-$DISTRO-rosbash \
        ros-$DISTRO-rqt-publisher \
        libzmq3-dev \
        libboost-coroutine-dev \
        libncurses5-dev \
        libncursesw5-dev \
        python3 \
        python3-pip \
        pybind11-dev \
        python-is-python3 \
        clang-format-10 \
        tmux  # Optional
    apt-get clean
    rm -rf /var/lib/apt/lists/*

    # Project
    PROJECT_ROOT=/usr/project
    mkdir -p $PROJECT_ROOT

    # Python
    pip3 install \
        wstool \
        catkin-tools \
        pybind11[global] \
        pyyaml==5.4.1 \
        empy \
        numpy \
        rospkg \
        opencv-python \
        PyQt5

    # Dart
    cd $PROJECT_ROOT
    wget https://github.com/dartsim/dart/archive/refs/tags/v6.12.2.tar.gz
    tar -xf v6.12.2.tar.gz
    cd dart-6.12.2
    mkdir build
    cd build
    cmake ..
    make -j4
    make install
    cd $PROJECT_ROOT
    rm -rf dart-6.12.2

    # Catkin dependencies
    cd $PROJECT_ROOT
    mkdir src
    cd src
    wstool init
    wstool merge ../ros_requirements.rosinstall
    wstool up

    # Build catkin workspace
    cd ..
    catkin init
    catkin config --extend /opt/ros/noetic
    catkin build

    # Since env section uses sh instead of bash, source the setup file here
    # and just pass the commands to export the new env variables.
    printenv >>tmp_init_env
    . devel/setup.bash
    printenv >>tmp_final_env
    echo "set -a" >>$SINGULARITY_ENVIRONMENT
    grep -vf tmp_init_env tmp_final_env >>$SINGULARITY_ENVIRONMENT
    echo "set +a" >>$SINGULARITY_ENVIRONMENT

%environment -c /bin/bash
    export PROJECT_ROOT=/usr/project

    # Detect package
    export PYTHONPATH="."
